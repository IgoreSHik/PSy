/*
WARNING: Do NOT edit the input and output ports in this file in a text
editor if you plan to continue editing the block that represents it in
the Block Editor! File corruption is VERY likely to occur.
*/

/*
Copyright (C) 2018  Intel Corporation. All rights reserved.
Your use of Intel Corporation's design tools, logic functions 
and other software and tools, and its AMPP partner logic 
functions, and any output files from any of the foregoing 
(including device programming or simulation files), and any 
associated documentation or information are expressly subject 
to the terms and conditions of the Intel Program License 
Subscription Agreement, the Intel Quartus Prime License Agreement,
the Intel FPGA IP License Agreement, or other applicable license
agreement, including, without limitation, that your use is for
the sole purpose of programming logic devices manufactured by
Intel and sold by Intel or its authorized distributors.  Please
refer to the applicable agreement for further details.
*/

HEADER
{
	VERSION = 1;
	TIME_UNIT = ns;
	DATA_OFFSET = 0.0;
	DATA_DURATION = 1000.0;
	SIMULATION_TIME = 0.0;
	GRID_PHASE = 0.0;
	GRID_PERIOD = 10.0;
	GRID_DUTY_CYCLE = 50;
}

SIGNAL("Tstep_Q~4")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
}

SIGNAL("Tstep_Q~5")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = MACHINE;
	PARENT = "";
}

SIGNAL("Tstep_Q~5DUPLICATE")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("bus")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("bus[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bus";
}

SIGNAL("bus[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bus";
}

SIGNAL("bus[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bus";
}

SIGNAL("bus[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bus";
}

SIGNAL("bus[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bus";
}

SIGNAL("bus[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bus";
}

SIGNAL("bus[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bus";
}

SIGNAL("bus[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bus";
}

SIGNAL("bus[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "bus";
}

SIGNAL("clk")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dataIn")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("dataIn[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataIn";
}

SIGNAL("dataIn[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataIn";
}

SIGNAL("dataIn[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataIn";
}

SIGNAL("dataIn[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataIn";
}

SIGNAL("dataIn[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataIn";
}

SIGNAL("dataIn[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataIn";
}

SIGNAL("dataIn[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataIn";
}

SIGNAL("dataIn[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataIn";
}

SIGNAL("dataIn[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "dataIn";
}

SIGNAL("done")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = OUTPUT;
	PARENT = "";
}

SIGNAL("reset")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("run")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("regn:reg_A|Q")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("regn:reg_A|Q[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_A|Q";
}

SIGNAL("regn:reg_A|Q[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_A|Q";
}

SIGNAL("regn:reg_A|Q[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_A|Q";
}

SIGNAL("regn:reg_A|Q[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_A|Q";
}

SIGNAL("regn:reg_A|Q[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_A|Q";
}

SIGNAL("regn:reg_A|Q[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_A|Q";
}

SIGNAL("regn:reg_A|Q[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_A|Q";
}

SIGNAL("regn:reg_A|Q[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_A|Q";
}

SIGNAL("regn:reg_A|Q[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_A|Q";
}

SIGNAL("regn:reg_G|Q")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("regn:reg_G|Q[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_G|Q";
}

SIGNAL("regn:reg_G|Q[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_G|Q";
}

SIGNAL("regn:reg_G|Q[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_G|Q";
}

SIGNAL("regn:reg_G|Q[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_G|Q";
}

SIGNAL("regn:reg_G|Q[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_G|Q";
}

SIGNAL("regn:reg_G|Q[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_G|Q";
}

SIGNAL("regn:reg_G|Q[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_G|Q";
}

SIGNAL("regn:reg_G|Q[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_G|Q";
}

SIGNAL("regn:reg_G|Q[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_G|Q";
}

SIGNAL("regn:reg_IR|Q")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = BUS;
	WIDTH = 9;
	LSB_INDEX = 0;
	DIRECTION = REGISTERED;
	PARENT = "";
}

SIGNAL("regn:reg_IR|Q[8]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_IR|Q";
}

SIGNAL("regn:reg_IR|Q[7]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_IR|Q";
}

SIGNAL("regn:reg_IR|Q[6]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_IR|Q";
}

SIGNAL("regn:reg_IR|Q[5]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_IR|Q";
}

SIGNAL("regn:reg_IR|Q[4]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_IR|Q";
}

SIGNAL("regn:reg_IR|Q[3]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_IR|Q";
}

SIGNAL("regn:reg_IR|Q[2]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_IR|Q";
}

SIGNAL("regn:reg_IR|Q[1]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_IR|Q";
}

SIGNAL("regn:reg_IR|Q[0]")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = REGISTERED;
	PARENT = "regn:reg_IR|Q";
}

SIGNAL("regn:reg_0|Q[0]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("regn:reg_0|Q[1]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("regn:reg_0|Q[2]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("regn:reg_0|Q[3]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("regn:reg_0|Q[4]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("regn:reg_0|Q[5]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("regn:reg_0|Q[6]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("regn:reg_0|Q[7]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("regn:reg_0|Q[8]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("regn:reg_1|Q[0]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("regn:reg_1|Q[1]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("regn:reg_1|Q[2]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("regn:reg_1|Q[3]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("regn:reg_1|Q[4]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("regn:reg_1|Q[5]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("regn:reg_1|Q[6]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("regn:reg_1|Q[7]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

SIGNAL("regn:reg_1|Q[8]~reg0")
{
	VALUE_TYPE = NINE_LEVEL_BIT;
	SIGNAL_TYPE = SINGLE_BIT;
	WIDTH = 1;
	LSB_INDEX = -1;
	DIRECTION = INPUT;
	PARENT = "";
}

GROUP("Tster_Q")
{
	MEMBERS = "Tstep_Q~4", "Tstep_Q~5", "Tstep_Q~5DUPLICATE";
}

GROUP("regn:reg_0|Q")
{
	MEMBERS = "regn:reg_0|Q[0]~reg0", "regn:reg_0|Q[1]~reg0", "regn:reg_0|Q[2]~reg0", "regn:reg_0|Q[3]~reg0", "regn:reg_0|Q[4]~reg0", "regn:reg_0|Q[5]~reg0", "regn:reg_0|Q[6]~reg0", "regn:reg_0|Q[7]~reg0", "regn:reg_0|Q[8]~reg0";
}

GROUP("regn:reg_1|Q")
{
	MEMBERS = "regn:reg_1|Q[0]~reg0", "regn:reg_1|Q[1]~reg0", "regn:reg_1|Q[2]~reg0", "regn:reg_1|Q[3]~reg0", "regn:reg_1|Q[4]~reg0", "regn:reg_1|Q[5]~reg0", "regn:reg_1|Q[6]~reg0", "regn:reg_1|Q[7]~reg0", "regn:reg_1|Q[8]~reg0";
}

TRANSITION_LIST("Tstep_Q~4")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Tstep_Q~5")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("Tstep_Q~5DUPLICATE")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bus[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bus[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bus[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bus[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bus[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bus[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bus[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bus[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("bus[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("clk")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 20;
			LEVEL 0 FOR 25.0;
			LEVEL 1 FOR 25.0;
		}
	}
}

TRANSITION_LIST("dataIn[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 550.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
	}
}

TRANSITION_LIST("dataIn[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 250.0;
		LEVEL 1 FOR 350.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
	}
}

TRANSITION_LIST("dataIn[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 350.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 200.0;
	}
}

TRANSITION_LIST("dataIn[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 150.0;
	}
}

TRANSITION_LIST("dataIn[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 600.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("dataIn[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 300.0;
		LEVEL 1 FOR 50.0;
	}
}

TRANSITION_LIST("dataIn[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 350.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 200.0;
	}
}

TRANSITION_LIST("dataIn[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 500.0;
		LEVEL 1 FOR 150.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 100.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 100.0;
	}
}

TRANSITION_LIST("dataIn[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 100.0;
		LEVEL 1 FOR 200.0;
		LEVEL 0 FOR 150.0;
		LEVEL 1 FOR 50.0;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 250.0;
		LEVEL 0 FOR 50.0;
	}
}

TRANSITION_LIST("done")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("reset")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 50.0;
		LEVEL 1 FOR 950.0;
	}
}

TRANSITION_LIST("run")
{
	NODE
	{
		REPEAT = 1;
		NODE
		{
			REPEAT = 10;
			LEVEL 0 FOR 50.0;
			LEVEL 1 FOR 50.0;
		}
	}
}

TRANSITION_LIST("regn:reg_A|Q[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_A|Q[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_A|Q[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_A|Q[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_A|Q[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_A|Q[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_A|Q[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_A|Q[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_A|Q[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_G|Q[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_G|Q[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_G|Q[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_G|Q[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_G|Q[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_G|Q[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_G|Q[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_G|Q[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_G|Q[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_IR|Q[8]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_IR|Q[7]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_IR|Q[6]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_IR|Q[5]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_IR|Q[4]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_IR|Q[3]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_IR|Q[2]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_IR|Q[1]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_IR|Q[0]")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_0|Q[0]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_0|Q[1]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_0|Q[2]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_0|Q[3]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_0|Q[4]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_0|Q[5]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_0|Q[6]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_0|Q[7]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_0|Q[8]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_1|Q[0]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_1|Q[1]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_1|Q[2]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_1|Q[3]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_1|Q[4]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_1|Q[5]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_1|Q[6]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_1|Q[7]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

TRANSITION_LIST("regn:reg_1|Q[8]~reg0")
{
	NODE
	{
		REPEAT = 1;
		LEVEL 0 FOR 1000.0;
	}
}

DISPLAY_LINE
{
	CHANNEL = "reset";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 0;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "clk";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 1;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "run";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 2;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "dataIn";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 3;
	TREE_LEVEL = 0;
	CHILDREN = 4, 5, 6, 7, 8, 9, 10, 11, 12;
}

DISPLAY_LINE
{
	CHANNEL = "dataIn[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 4;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dataIn[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 5;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dataIn[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 6;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dataIn[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 7;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dataIn[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 8;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dataIn[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 9;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dataIn[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 10;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dataIn[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 11;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "dataIn[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 12;
	TREE_LEVEL = 1;
	PARENT = 3;
}

DISPLAY_LINE
{
	CHANNEL = "done";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 13;
	TREE_LEVEL = 0;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_IR|Q";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 14;
	TREE_LEVEL = 0;
	CHILDREN = 15, 16, 17, 18, 19, 20, 21, 22, 23;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_IR|Q[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 15;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_IR|Q[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 16;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_IR|Q[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 17;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_IR|Q[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 18;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_IR|Q[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 19;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_IR|Q[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 20;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_IR|Q[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 21;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_IR|Q[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 22;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_IR|Q[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Octal;
	TREE_INDEX = 23;
	TREE_LEVEL = 1;
	PARENT = 14;
}

DISPLAY_LINE
{
	CHANNEL = "Tster_Q";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 24;
	TREE_LEVEL = 0;
	CHILDREN = 25, 26, 27;
}

DISPLAY_LINE
{
	CHANNEL = "Tstep_Q~4";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 25;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "Tstep_Q~5";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 26;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "Tstep_Q~5DUPLICATE";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Binary;
	TREE_INDEX = 27;
	TREE_LEVEL = 1;
	PARENT = 24;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_0|Q";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 28;
	TREE_LEVEL = 0;
	CHILDREN = 29, 30, 31, 32, 33, 34, 35, 36, 37;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_0|Q[0]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 29;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_0|Q[1]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 30;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_0|Q[2]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 31;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_0|Q[3]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 32;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_0|Q[4]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 33;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_0|Q[5]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 34;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_0|Q[6]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 35;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_0|Q[7]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 36;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_0|Q[8]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 37;
	TREE_LEVEL = 1;
	PARENT = 28;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_1|Q";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 38;
	TREE_LEVEL = 0;
	CHILDREN = 39, 40, 41, 42, 43, 44, 45, 46, 47;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_1|Q[0]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 39;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_1|Q[1]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 40;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_1|Q[2]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 41;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_1|Q[3]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 42;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_1|Q[4]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 43;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_1|Q[5]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 44;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_1|Q[6]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 45;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_1|Q[7]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 46;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_1|Q[8]~reg0";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 47;
	TREE_LEVEL = 1;
	PARENT = 38;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_A|Q";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 48;
	TREE_LEVEL = 0;
	CHILDREN = 49, 50, 51, 52, 53, 54, 55, 56, 57;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_A|Q[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 49;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_A|Q[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 50;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_A|Q[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 51;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_A|Q[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 52;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_A|Q[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 53;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_A|Q[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 54;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_A|Q[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 55;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_A|Q[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 56;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_A|Q[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 57;
	TREE_LEVEL = 1;
	PARENT = 48;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_G|Q";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 58;
	TREE_LEVEL = 0;
	CHILDREN = 59, 60, 61, 62, 63, 64, 65, 66, 67;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_G|Q[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 59;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_G|Q[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 60;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_G|Q[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 61;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_G|Q[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 62;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_G|Q[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 63;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_G|Q[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 64;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_G|Q[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 65;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_G|Q[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 66;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "regn:reg_G|Q[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 67;
	TREE_LEVEL = 1;
	PARENT = 58;
}

DISPLAY_LINE
{
	CHANNEL = "bus";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 68;
	TREE_LEVEL = 0;
	CHILDREN = 69, 70, 71, 72, 73, 74, 75, 76, 77;
}

DISPLAY_LINE
{
	CHANNEL = "bus[8]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 69;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "bus[7]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 70;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "bus[6]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 71;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "bus[5]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 72;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "bus[4]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 73;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "bus[3]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 74;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "bus[2]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 75;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "bus[1]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 76;
	TREE_LEVEL = 1;
	PARENT = 68;
}

DISPLAY_LINE
{
	CHANNEL = "bus[0]";
	EXPAND_STATUS = COLLAPSED;
	RADIX = Hexadecimal;
	TREE_INDEX = 77;
	TREE_LEVEL = 1;
	PARENT = 68;
}

TIME_BAR
{
	TIME = 0;
	MASTER = TRUE;
}
;
